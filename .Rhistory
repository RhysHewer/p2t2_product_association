typeData <- read.transactions("output/typePrep.csv", format = "basket", sep=",")
inspect(typeData[1:10])
summary(typeData)
#Outputs
save(transData, file = "output/transdata.RDS")
#Outputs
save(transData, file = "output/transData.RDS")
save(prodData, file = "output/prodData.RDS")
save(typeData, file = "output/typeData.RDS")
#Outputs
save(transData, file = "output/transData.RDS")
#load data
load("output/transData.RDS") # transaction data individual items (sparse matrix)
#load data
load("output/transData.RDS") # transaction data individual items (sparse matrix)
load("output/prodData.RDS") # transaction data indivifual items (S3 data)
load("output/typeData.RDS") # transaction data product type (sparse matrix)
###Investigating trends in Product Types
#preliminary data investigation
summary(typeData) #summary of dataset
inspect(typeData[1:5]) #inspect specific transaction sets
itemLabels(data) %>% sample(10) # random sample of 10 item names
itemLabels(typeData) %>% sample(10) # random sample of 10 item names
size(typeData[1:10])
summary(itemFrequency(typeData)) # summary of support values of dataset
dimnames(data)
inspect(data)
dimnames(typeData)
inspect(typeData)
typeData %>% col.names() %>% head(5)
#preliminary visualisation
itemFrequencyPlot(typeData, support = 0.05)
itemFrequencyPlot(data, topN = 10, cex.names = 0.7, col = brewer.pal(8, 'Dark2'))
itemFrequencyPlot(typeData, topN = 10, cex.names = 0.7, col = brewer.pal(8, 'Dark2'))
data %>% sample(25) %>% image()
typeData %>% sample(25) %>% image()
summary(itemFrequency(typeData)) # summary of support values of dataset
#apriori package
basketRules <- apriori(typeData, parameter = list(supp = 0.1, conf = 0.20, minlen = 2))
basketRules
basketRules %>% sort(by = "lift") %>% head(5) %>% inspect()
#apriori package
basketRules <- apriori(typeData, parameter = list(supp = 0.1, conf = 0.10, minlen = 2))
basketRules
#apriori package
basketRules <- apriori(typeData, parameter = list(supp = 0.05, conf = 0.10, minlen = 2))
basketRules
class(basketRules)
basketRules %>% sort(by = "lift") %>% head(5) %>% inspect()
summary(itemFrequency(typeData))
itemFrequency(typeData)[1:5]
itemFrequency(typeData)[label == "compcord"]
itemFrequency(typeData)[label == compcord]
baskerRules.Desktop <- apriori (typeData, parameter = list(supp = 0.05, conf = 0.10, minlen = 2),
appearance = list (default="lhs",rhs="desktop"), control = list (verbose=F)) # get rules that lead to buying 'whole milk'
baskerRules.Desktop
baskerRules.Desktop %>% sort(by = "confidence") %>% head(5) %>% inspect()
#Load data - Blackwell products info
blackData <- read.csv("data/existingProductAttributes.csv")
View(blackData)
names(blackData)
blackData <- blackData %>% mutate(profit = Volume * Price * Profit.margin)
blackProfit <- blackData %>% group_by(Product.Type) %>%
summarise(absProfit = sum(profit), avgProfit = mean(profit))
source('C:/Users/rhysh/Google Drive/Data Science/Ubiqum/Project 2/Task 4/scripts/eda.r', echo=TRUE)
blackProfit
#EDA of blackwell profitability
blackData <- blackData %>% mutate(profit = Volume * Price * Profit.margin, unitProfit = (Volume * Price * Profit.margin)/Volume)
#EDA of blackwell profitability
blackData <- blackData %>% mutate(profit = Volume * Price * Profit.margin, unitProfit = Price * Profit.margin)
blackProfit <- blackData %>% group_by(Product.Type) %>%
summarise(absProfit = sum(profit), avgProfit = mean(unitProfit), volume = Volume)
blackProfit <- blackData %>% group_by(Product.Type) %>%
summarise(absProfit = sum(profit), avgProfit = mean(unitProfit), volume = sum(Volume))
blackProfit
g1 <- ggplot(blackProfit, aes(Product.Type, absProfit)) +
geom_col()
g1
##BLACKWELL DATA
#EDA of blackwell profitability
blackData <- blackData %>% filter(Product.Type != "Extended Warranty") %>% mutate(profit = Volume * Price * Profit.margin, unitProfit = Price * Profit.margin)
blackProfit <- blackData %>% group_by(Product.Type) %>%
summarise(absProfit = sum(profit), avgProfit = mean(unitProfit), volume = sum(Volume))
blackProfit
g1 <- ggplot(blackProfit, aes(Product.Type, absProfit)) +
geom_col()
g1
g1 <- ggplot(blackProfit, aes(Product.Type, absProfit, fill = avgProfit)) +
geom_col()
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, absprofit), absProfit, fill = avgProfit)) +
geom_col()
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, absProfit), absProfit, fill = avgProfit)) +
geom_col()
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = avgProfit)) +
geom_col()
g1
blackProfit <- blackData %>% group_by(Product.Type) %>%
summarise(absProfit = sum(profit), unitProfit = mean(unitProfit), volume = sum(Volume))
blackProfit
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -unitProfit), unitProfit, fill = avgProfit)) +
geom_col()
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col()
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "white")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_brewer(palette="Blues")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit, width = volume)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col(aes(width = volume)) +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col(aes(width = volume), stat="identity", position="identity") +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit,
fill = unitProfit, width = volume), stat="identity", position="identity")) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit) +
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_area() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4")
g2 <- ggplot(blackProfit, aes(Product.Type, absProfit)) +
geom_col(fill = unitProfit) +
scale_fill_gradient(low = "skyblue", high = "blue4")
g2 <- ggplot(blackProfit, aes(Product.Type, absProfit)) +
geom_col(aes(fill = unitProfit)) +
scale_fill_gradient(low = "skyblue", high = "blue4")
g2
g2 <- ggplot(blackProfit, aes(Product.Type, absProfit)) +
geom_col(aes(fill = unitProfit, width=volume/100)) +
scale_fill_gradient(low = "skyblue", high = "blue4")
g2 <- ggplot(blackProfit, aes(Product.Type, absProfit, width=volume/100)) +
geom_col(aes(fill = unitProfit)) +
scale_fill_gradient(low = "skyblue", high = "blue4")
g2
###ELECTROINDEX DATA
###Investigating trends in Electroindex Product Types
#preliminary data investigation
summary(typeData) #summary of dataset
g1
View(blackProfit)
blackProfit
blackProfit.long <- blackProfit %>% gather(Product.Type, "absProfit", "unitProfit", "volume", key = metric, element = value)
blackProfit.long <- blackProfit %>% gather(Product.Type, "absProfit", "unitProfit", "volume", key = metric, value = value)
View(blackProfit.long)
blackProfit.long <-  gather(blackProfit, "Product.Type", "absProfit", "unitProfit", "volume", key = metric, value = value)
View(blackProfit.long)
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit") +
xlab("Product Type") +
ggtitle("Profit per Product Type")
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g1
g2 <- ggplot(blackProfit, aes(Product.Type, volume)) +
geom_col()
g2
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume)) +
geom_col()
g2
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume)) +
geom_col() +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type")
g2
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume)) +
geom_col() +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g2
##BLACKWELL DATA
#EDA of blackwell profitability
blackData <- blackData %>% filter(Product.Type != "Extended Warranty") %>% mutate(profit = (Volume * Price * Profit.margin)/10^5, unitProfit = Price * Profit.margin)
blackProfit <- blackData %>% group_by(Product.Type) %>%
summarise(absProfit = sum(profit), unitProfit = mean(unitProfit), volume = sum(Volume))
blackProfit
##BLACKWELL DATA
#EDA of blackwell profitability
blackData <- blackData %>% filter(Product.Type != "Extended Warranty") %>% mutate(profit = (Volume * Price * Profit.margin)/10^3, unitProfit = Price * Profit.margin)
blackProfit <- blackData %>% group_by(Product.Type) %>%
summarise(absProfit = sum(profit), unitProfit = mean(unitProfit), volume = sum(Volume))
blackProfit
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g1
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit, fill = "#45c16a"), volume)) +
geom_col() +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g2
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume)) +
geom_col(aes(fill = "#45c16a")) +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g2
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume, fill = "#45c16a")) +
geom_col() +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g2
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume, colour = "#45c16a")) +
geom_col() +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g2
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume)) +
geom_col(fill = "#45c16a") +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g2
g1
g2
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = y), position = position_dodge(0.9))
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit), position = position_dodge(0.9))
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0)), position = position_dodge(0.9))
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0)))
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0))vjust = 0)
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0)), vjust = 0)
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0)), vjust = 0.1)
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0)), vjust = 0.5)
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0)), vjust = -0.5)
g1
g1 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), absProfit, fill = unitProfit)) +
geom_col() +
scale_fill_gradient(low = "skyblue", high = "blue4") +
theme_bw() +
ylab("Profit ($ thousands)") +
xlab("Product Type") +
ggtitle("Profit per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = absProfit %>% round(0)), vjust = -0.3)
g1
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume)) +
geom_col(fill = "#45c16a") +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g2
###ELECTROINDEX DATA
###Investigating trends in Electroindex Product Types
#preliminary data investigation
summary(typeData) #summary of dataset
inspect(typeData[1:5]) #inspect specific transaction sets
#Rules specific to desktops
basketRules.Desktop <- apriori (typeData, parameter = list(supp = 0.05, conf = 0.10, minlen = 2), # get rules that lead to buying 'desktop'
appearance = list (default="lhs",rhs="desktop"), control = list (verbose=F))
basketRules.Desktop %>% sort(by = "confidence") %>% head(5) %>% inspect()
### Loading PDF data
text <- pdf_text("data/ElectronidexItems2017.pdf")
text2 <- strsplit(text, "\n")
text2 <- text2 %>% unlist(recursive = TRUE)
text3 <- gsub("\r", "", text2)
prod.list <- text3 %>% as.data.frame()
View(prod.list)
##create product type lists
laptop.list <- prod.list[2:11,1] %>% as.character() %>% trimws("l")
laptop.list
blackProfit
names(blackProfit)
blackProfit$Product.Type
electroProducts <- itemFrequency(typeData)
itemFrequency(typeData)
electroProducts <- itemFrequency(typeData) %>% as.data.frame()
View(electroProducts)
electroProducts <- itemFrequency(typeData) %>% as.data.frame() %>% rownames_to_column()
View(electroProducts)
g3 <- ggplot(electroProducts, aes(rowname, .)) +
geom_col()
g3
g3 <- ggplot(electroProducts, aes(reorder(rowname, .) .)) +
geom_col()
g3 <- ggplot(electroProducts, aes(reorder(rowname, .), .)) +
geom_col()
g3
g3 <- ggplot(electroProducts, aes(reorder(rowname, -.), .)) +
geom_col()
g3
electroProducts <- electroProducts %>% rename("rowname" = "product type")
names(electroProducts) <- c("Product Type", "Support")
g3 <- ggplot(electroProducts, aes(reorder(Product Type, -Support), Support)) +
geom_col()
names(electroProducts) <- c("ProductType", "Support")
g3 <- ggplot(electroProducts, aes(reorder(ProductType, -Support), Support)) +
geom_col()
g3
g3 <- ggplot(electroProducts, aes(reorder(ProductType, -Support), Support)) +
geom_col() +
theme_bw() +
ylab("Frequency") +
xlab("Product Type") +
ggtitle("Frequency per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g3
electroProducts <- electroProducts %>% mutate(Occurance = Support * 9835)
g3 <- ggplot(electroProducts, aes(reorder(ProductType, -Support), Support)) +
geom_col(fill = "#ae82bc") +
theme_bw() +
ylab("Frequency") +
xlab("Product Type") +
ggtitle("Frequency per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0))
g3
g1
g2 <- ggplot(blackProfit, aes(reorder(Product.Type, -absProfit), volume)) +
geom_col(fill = "#45c16a") +
theme_bw() +
ylab("Sales Volume") +
xlab("Product Type") +
ggtitle("Sales Volume per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = volume %>% round(0)), vjust = -0.3)
g2
g3 <- ggplot(electroProducts, aes(reorder(ProductType, -Support), Support)) +
geom_col(fill = "#ae82bc") +
theme_bw() +
ylab("Frequency") +
xlab("Product Type") +
ggtitle("Frequency per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = volume %>% round(0)), vjust = -0.3)
g3
g3 <- ggplot(electroProducts, aes(reorder(ProductType, -Support), Support)) +
geom_col(fill = "#ae82bc") +
theme_bw() +
ylab("Frequency") +
xlab("Product Type") +
ggtitle("Frequency per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = Support %>% round(0)), vjust = -0.3)
g3
g3 <- ggplot(electroProducts, aes(reorder(ProductType, -Support), Support)) +
geom_col(fill = "#ae82bc") +
theme_bw() +
ylab("Frequency") +
xlab("Product Type") +
ggtitle("Frequency per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = Support %>% round(0.2)), vjust = -0.3)
g3
g3 <- ggplot(electroProducts, aes(reorder(ProductType, -Support), Support)) +
geom_col(fill = "#ae82bc") +
theme_bw() +
ylab("Frequency") +
xlab("Product Type") +
ggtitle("Frequency per Product Type") +
theme(axis.text.x=element_text(angle = -45, hjust = 0)) +
geom_text(aes(label = Support %>% round(2)), vjust = -0.3)
g3
