library(caret)
#Load libraries
source("scripts/libraries.R")
data <- read.transaction("data/ElectronidexTransactions2017.csv")
library(arules)
data <- read.transactions("data/ElectronidexTransactions2017.csv")
summary(data)
data <- read.transactions("data/ElectronidexTransactions2017.csv", format = "basket", sep = ",", rm.duplicates = TRUE)
summary(data)
data <- read.transactions("data/ElectronidexTransactions2017.csv", format = "basket", sep = ",")
summary(data)
inspect(data[1:5])
LIST(DatasetName)
LIST(data)
LIST(data[1:5])
inspect(data[1:5])
itemLabels(data[1:5])
itemLabels(data) %>% head(5)
itemLabels(data) %>% head(10)
itemLabels(data) %>% sample(10)
inspect(data[1:5])
itemLabels(data) %>% sample(10)
size(data)
size(data[1:10])
#preliminary data investigation
summary(data)
#zero items transaction
size(data, size == 0)
summary(size(data))
itemFrequency(data[Redragon Gaming Mouse])
itemFrequency(data["Redragon Gaming Mouse"])
itemFrequency(data[1:10])
itemFrequency(data[,1:10])
#preliminary visualisation
itemFrequencyPlot(data, support = 0.08)
#preliminary visualisation
itemFrequencyPlot(data, support = 0.05)
itemFrequencyPlot(data, topN = 10)
itemFrequencyPlot(data, topN = 10, cex.names = 1)
itemFrequencyPlot(data, topN = 10, cex.names = 0.5)
itemFrequencyPlot(data, topN = 10, cex.names = 0.7)
itemFrequencyPlot(data, topN = 10, cex.names = 0.7, popCol = "green")
itemFrequencyPlot(data, topN = 10, cex.names = 0.7, popCol = "green", popLwd = 2)
itemFrequencyPlot(data, topN = 10, cex.names = 0.7)
data %>% sample(25) %>% image()
#preliminary visualisation
itemFrequencyPlot(data, support = 0.05)
itemFrequencyPlot(data, topN = 10, cex.names = 0.7)
attributes(data)
#preliminary data investigation
summary(data)
inspect(data[1:5])
itemLabels(data) %>% sample(10)
size(data[1:10])
itemFrequency(data[,1:10])
itemFrequency(data, topN = 10)
sort(data, decreasing = TRUE, by = "support") %>% head(10)
sort(data, decreasing = TRUE, by = "support", na.last = NA) %>% head(10)
sort(data, decreasing = TRUE, by = "support", na.last = NA)
sort(data, decreasing = TRUE, na.last = NA, by = "support", order = FALSE, ...)
sort(data, decreasing = TRUE, na.last = NA, by = "support", order = FALSE)
test <- sort(data, decreasing = TRUE, na.last = NA, by = "support", order = FALSE)
#apriori package
rules <- apriori(data, parameter = list(supp = 0.1, conf = 0.8))
inspect(rules)
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.1, conf = 0.8))
inspect(basketRules)
View(basketRules)
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.1, conf = 0.7))
inspect(basketRules)
basketRules
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.05, conf = 0.7))
basketRules
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.05, conf = 0.5))
basketRules
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.05, conf = 0.25))
basketRules
#preliminary data investigation
summary(data)
inspect(data[1:5])
itemLabels(data) %>% sample(10)
size(data[1:10])
summary(itemFrequency(data))
#preliminary data investigation
summary(data) #summary of dataset
inspect(data[1:5])
itemLabels(data) %>% sample(10)
size(data[1:10])
summary(itemFrequency(data)) # summary of support values of dataset
#preliminary data investigation
summary(data) #summary of dataset
basketRules
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.017, conf = 0.25))
basketRules
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.017, conf = 0.20))
basketRules
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.017, conf = 0.20, minlen = 2))
basketRules
summary(basketRules)
inspect(basketRules[1:5])
basketRules %>% sort(by = "lift") %>% inspect[1:5]
basketRules %>% sort(by = "lift") %>% inspect([1:5])
basketRules %>% sort(by = "lift") %>% head(5)
basketRules %>% sort(by = "lift") %>% head(5) %>% inspect()
ItemRules <- subset(basketRules, items %in% "ASUS Chromebook")
ItemRules
ItemRules %>% inspect()
itemSort <- basketRules %>% filter(items = ASUS Chromebook)
itemSort <- basketRules %>% filter(items = "ASUS Chromebook")
is.redundant(basketRules)
##Results visualisation
plot(ItemRules)
##Results visualisation
plot(basketRules)
data %>% row.names() %>% head(5)
data %>% col.names() %>% head(5)
View(data)
dimnames(data)
rownames(data)
#preliminary data investigation
summary(data) #summary of dataset
attributes(data)
plot(basketRules[1:10], method="graph", control=list(type="items"))
#preliminary visualisation
itemFrequencyPlot(data, support = 0.05)
itemFrequencyPlot(data, topN = 10, cex.names = 0.7)
itemFrequencyPlot(data, topN = 10, cex.names = 0.7, col=brewer.pal('Pastel2'))
itemFrequencyPlot(data, topN = 10, cex.names = 0.7, col=brewer.pal(8, 'Pastel2'))
colour brewer.pal.info
brewer.pal.info
brewer.pal()
itemFrequencyPlot(data, topN = 10, cex.names = 0.7, col=brewer.pal(8, 'Dark2'))
basketRules
#apriori package
basketRules <- apriori(data, parameter = list(supp = 0.01, conf = 0.20, minlen = 2))
basketRules
basketRules %>% sort(by = "lift") %>% head(5) %>% inspect()
basketRules %>% sort(by = "lift") %>% head(5) %>% inspect()
basketRules %>% sort(by = "support") %>% head(5) %>% inspect()
basketRules %>% sort(by = "confidence") %>% head(5) %>% inspect()
basketRules %>% sort(by = "lift") %>% tail(5) %>% inspect()
basketRules %>% sort(by = "support") %>% tail(5) %>% inspect()
basketRules %>% sort(by = "confidence") %>% tail(5) %>% inspect()
summary(basketRules)
basketRules
basketRules %>% sort(by = "lift") %>% head(5) %>% inspect()
ruleExplorer(data)
#Shiny app
ruleExplorer(basketRules)
data1 <- read.csv("data/ElectronidexTransactions2017.csv")
View(data1)
data1 <- read.csv("data/ElectronidexTransactions2017.csv", header = TRUE)
data1 <- read.csv("data/ElectronidexTransactions2017.csv", header = TRUE)
View(data1)
data1 <- read.csv("data/ElectronidexTransactions2017.csv", header = FALSE)
View(data1)
